name: Deploy ECS (dev partner)

env:
  ENVIRONMENT: dev
  AWS_ECSPRESSO_ROLE_ARN: arn:aws:iam::450440358764:role/ecspressoGitHubActionsRole
  ECR_REGISTRY: 450440358764.dkr.ecr.ap-northeast-1.amazonaws.com

on:
  workflow_dispatch:
    # inputs:
    #   image_tag:
    #     description: 'デプロイのみしたい場合に利用。存在するイメージタグを指定してください'
    #     required: false
    #   enable_image_scan:
    #     description: 'スキャンを必須にする'
    #     required: false
    #     default: false
    #     type: boolean
  # 5分おきに実行
  schedule:
    - cron:  '*/5 * * * *'

permissions:
  id-token: write
  contents: read
jobs:
  get-env-vars:
    name: 環境変数の取得
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ env.ENVIRONMENT }}
      AWS_ECSPRESSO_ROLE_ARN: ${{ env.AWS_ECSPRESSO_ROLE_ARN }}
      ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
    steps:
      - run: echo "workflow_callで呼び出された場合は、envの値が取得できないので、ここで取得します。"

  set-image-tag:
    name: イメージタグの作成or取得
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create-tag.outputs.TAG }}
      skip_build: ${{ steps.create-tag.outputs.SKIP_BUILD }}
    steps:
      - name: Create tag
        id: create-tag
        env:
          TZ: 'Asia/Tokyo'
        run: |
          if [ -z "${{ inputs.image_tag || '' }}" ] || [ "${{ github.event_name }}" == "schedule" ]; then
            echo TAG="${{ github.sha }}-$(date '+%Y%m%d%H%M')" >> $GITHUB_OUTPUT
            echo SKIP_BUILD=false >> $GITHUB_OUTPUT
          else
            echo TAG=${{ inputs.image_tag }} >> $GITHUB_OUTPUT
            echo SKIP_BUILD=true >> $GITHUB_OUTPUT
          fi

  build-manager-partner:
    needs: [get-env-vars, set-image-tag]
    if: ${{ needs.set-image-tag.outputs.skip_build != 'true' || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Echo input values
        run: |
          echo "ref: ${{ github.ref_name }}"
          echo "image_tag: ${{ needs.set-image-tag.outputs.tag }}"
          echo "environment: ${{ needs.get-env-vars.outputs.ENVIRONMENT }}"
          echo "aws_ecspresso_role_arn: ${{ needs.get-env-vars.outputs.AWS_ECSPRESSO_ROLE_ARN }}"
          echo "ecr_registry: ${{ needs.get-env-vars.outputs.ECR_REGISTRY }}"
          echo "apache_default_conf_path: manager/dev"
          echo "php_fpm_zzz_www_conf_path: manager/dev"
          echo "enable_scan: ${{ needs.set-image-tag.outputs.enable_scan }}"

  push-manager-partner:
    needs: [get-env-vars, set-image-tag, build-manager-partner]
    name: イメージのpush
    if: ${{ needs.set-image-tag.outputs.skip_build != 'true' }}
    strategy:
      # matrixのジョブのいずれかが失敗した時点で他のジョブもすべてキャンセルされます
      fail-fast: true
      matrix:
        repository: [codmon-manager-partner-apache, codmon-manager-partner]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Echo input values
        run: |
          echo "environment: ${{ needs.get-env-vars.outputs.ENVIRONMENT }}"
          echo "aws_role_arn: ${{ needs.get-env-vars.outputs.AWS_ECSPRESSO_ROLE_ARN }}"
          echo "ecr_registry: ${{ needs.get-env-vars.outputs.ECR_REGISTRY }}"
          echo "ecr_repository: ${{ matrix.repository }}"
          echo "image_tag: ${{ needs.set-image-tag.outputs.tag }}"

  liquibase-update:
    needs: [get-env-vars, set-image-tag, push-manager-partner]
    name: Liquibaseの実行（デバッグ用）
    if: ${{ !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Echo Liquibase inputs
        run: |
          echo "ref: ${{ github.ref_name }}"
          echo "env: dev"

  deploy_manager_partner:
    needs: [get-env-vars, set-image-tag, push-manager-partner, liquibase-update]
    if: ${{ !failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Echo deploy inputs
        run: |
          echo "image_tag: ${{ needs.set-image-tag.outputs.tag }}"
          echo "environment: ${{ needs.get-env-vars.outputs.ENVIRONMENT }}_partner"
          echo "aws_ecspresso_role_arn: ${{ needs.get-env-vars.outputs.AWS_ECSPRESSO_ROLE_ARN }}"
          echo "published_tag: ${{ inputs.custom_image_tag || '' }}"
